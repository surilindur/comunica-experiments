# Transitive friends with certain name
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sn: <http://localhost:3100/ldbc_socialnet/1.0/data/>
PREFIX snvoc: <http://localhost:3100/ldbc_socialnet/1.0/vocabulary/>
PREFIX sntag: <http://localhost:3100/ldbc_socialnet/1.0/tag/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://localhost:3200/resource/>
PREFIX dbpedia-owl: <http://localhost:3200/ontology/>

SELECT
    (?frId AS ?friendId)
    (?last AS ?friendLastName)
    (MIN(?dist) AS ?distanceFromPerson)
    (?bday AS ?friendBirthday)
    (?since AS ?friendCreationDate)
    (?gen AS ?friendGender)
    (?browser AS ?friendBrowserUsed)
    (?locationIP AS ?friendLocationIp)
    (?emails AS ?friendEmails)
    (?languages AS ?friendLanguages)
    (?based AS ?friendCityName)
    (?studies AS ?friendUniversities)
    (?jobs AS ?friendCompanies)
{
    {
        SELECT
            ?fr
            ?emails
            ?dist
            (GROUP_CONCAT(?language;separator=", ") AS ?languages)
        WHERE
        {
            {
                SELECT
                    ?fr
                    ?dist
                    (GROUP_CONCAT(?email;separator=", ") AS ?emails)
                WHERE
                {
                    {
                        SELECT
                            ?fr
                            (MIN(?distInner) AS ?dist)
                        WHERE
                        {
                            ?rootPerson a snvoc:Person .
                            ?rootPerson snvoc:id ?rootId .
                            ?rootPerson snvoc:id ?rootId .
                            ?fr a snvoc:Person .
                            {
                                ?rootPerson (snvoc:knows/snvoc:hasPerson)|^(snvoc:knows/snvoc:hasPerson) ?fr .
                                BIND( 1 AS ?distOneInner )
                            } UNION {
                                ?rootPerson ((snvoc:knows/snvoc:hasPerson)|^(snvoc:knows/snvoc:hasPerson))/((snvoc:knows/snvoc:hasPerson)|^(snvoc:knows/snvoc:hasPerson)) ?fr .
                                BIND( 2 AS ?distTwoInner )
                            } UNION {
                                ?rootPerson ((snvoc:knows/snvoc:hasPerson)|^(snvoc:knows/snvoc:hasPerson))/((snvoc:knows/snvoc:hasPerson)|^(snvoc:knows/snvoc:hasPerson))/((snvoc:knows/snvoc:hasPerson)|^(snvoc:knows/snvoc:hasPerson)) ?fr .
                            }
                            ?fr snvoc:id ?frId .
                            FILTER(?frId != ?rootId) .
                            ?fr snvoc:firstName $firstName .
                            BIND( IF(COALESCE(?distOneInner, 4) < 4, 1, IF(COALESCE(?distTwoInner, 4) < 4, 2, 3)) AS ?distInner)
                        }
                        GROUP BY ?fr
                    }
                    ?fr snvoc:email ?email .
                }
                GROUP BY ?fr ?dist
            }
            ?fr snvoc:speaks ?language
        }
        GROUP BY ?fr ?emails ?dist
    }
    ?fr snvoc:id ?frId .
    ?fr snvoc:lastName ?last .
    ?fr snvoc:birthday ?bday .
    ?fr snvoc:isLocatedIn ?basedURI .
    ?basedURI foaf:name ?based .
    ?fr snvoc:creationDate ?since .
    ?fr snvoc:gender ?gen .
    ?fr snvoc:locationIP ?locationIP .
    ?fr snvoc:browserUsed ?browser .
    OPTIONAL {
        {
            SELECT
                (?frInner AS ?frInnerUni)
                (GROUP_CONCAT(CONCAT(?uniName, " ", xsd:string(?classYear), " ", ?uniCountry);separator=", ") AS ?studies)
            {
                SELECT DISTINCT
                    ?frInner
                    ?uniName
                    ?classYear
                    ?uniCountry
                {
                    ?frInner a snvoc:Person .
                    ?frInner snvoc:studyAt ?study .
                    ?study snvoc:hasOrganisation ?uni .
                    ?uni foaf:name ?uniName .
                    ?study snvoc:classYear ?classYear .
                    ?uni snvoc:isLocatedIn/foaf:name ?uniCountry .
                }
            }
            GROUP BY ?frInner
        } .
        ?frInnerUni snvoc:id ?frInnerUniId .
        FILTER( ?frId = ?frInnerUniId)
    } .
    OPTIONAL {
        {
            SELECT
                (?frInner AS ?frInnerComp)
                (GROUP_CONCAT(CONCAT(?companyName, " ", xsd:string(?workFrom), " ", ?companyCountry);separator=", ") AS ?jobs)
            {
                SELECT DISTINCT
                    ?frInner
                    ?companyName
                    ?workFrom
                    ?companyCountry
                {
                    ?frInner a snvoc:Person .
                    ?frInner snvoc:workAt ?work .
                    ?work snvoc:hasOrganisation ?company .
                    ?work snvoc:workFrom ?workFrom .
                    ?company snvoc:isLocatedIn/foaf:name ?companyCountry .
                    ?company foaf:name ?companyName
                }
            }
            GROUP BY ?frInner
        } .
        ?frInnerComp snvoc:id ?frInnerCompId .
        FILTER( ?frId = ?frInnerCompId)
    }
}
GROUP BY ?frId ?last ?bday ?since ?gen ?browser ?locationIP ?based ?studies ?jobs ?emails ?languages
ORDER BY ?distanceFromPerson ?last ?frId
LIMIT 20
